openapi: 3.0.3
info:
  title: Home Location Store
  description: Location store for API training course
  termsOfService: http://example.com/terms/
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://{host}:{port}/{basepath}
  description: The production API server
  variables:
    host:
      default: localhost
      description: this value can be assigned by the service provider
    port:
      enum:
        - '8081'
        - '8001'
      default: '8081'
    basepath:
      default: v1
paths:
  /locations:
    get:
      description: Returns all home locations from the home location store
      responses:
        '200': 
          description: A list of all locations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
    post:
      description: Adds a new home location to the location store, returns the location record
      requestBody:
        description: Home location object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: Worker added to store
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '405':
          description: Invalid input
          content: {}
    put:
      description: Update an existing location record
      requestBody:
        description: Complete home location object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: Updated location record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Invalid Id supplied
          content: {}
        '404':
          description: Location not found
          content: {}
        '405':
          description: Invalid input
          content: {}
  /locations/{homeLocation}:
    get:
      description: returns a single home location record
      parameters:
      - name: homeLocation
        in: path
        description: Name of location to search against
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success finding location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Invalid home location supplied
          content: {}
        '404':
          description: location not found
          content: {}
    delete:
      description: deletes a single location
      parameters:
      - name: homeLocation
        in: path
        description: name of home location to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: success finding location
          content: {}
        '400':
          description: Invalid Id supplied
          content: {}
        '404':
          description: location not found
          content: {}
components:
  schemas:
    Location:
      type: object
      properties:
        locationName:
          type: string
        location:
          $ref: '#/components/schemas/GeoLocation'
      required:
      - locationName
      - location
    GeoLocation:
      type: object
      properties:
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
      required:
      - latitude
      - longitude
